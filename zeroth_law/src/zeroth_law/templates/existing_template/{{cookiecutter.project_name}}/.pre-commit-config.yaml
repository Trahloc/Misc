# FILE_LOCATION: source_project2/.pre-commit-config.yaml

repos:
  - repo: https://github.com/psf/black
    rev: 23.1.0  # Use a specific, stable version.  VS Code has built-in Black support.
    hooks:
      - id: black
        # VS Code:  Enable "Format on Save" and configure Black as the formatter.
        # pre-commit: This acts as a final check before commit.

  - repo: https://github.com/PyCQA/flake8
    rev: 6.0.0  # Use a specific, stable version.
    hooks:
      - id: flake8
        # VS Code: Install the "Python" extension (by Microsoft).  It includes
        #          flake8 integration.  Configure flake8 settings in your VS Code
        #          settings.json (e.g., max-line-length, ignore codes).
        # pre-commit: This is a final check, ensuring consistent style.
        args: [--max-line-length=88, --ignore=E203,W503] # Example: Adjust as needed.

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.0  # Use a specific, stable version.
    hooks:
      - id: mypy
        # VS Code: The "Python" extension also provides mypy integration.
        #          Configure mypy in your settings.json (e.g., strict mode).
        # pre-commit: Catches type errors that VS Code might miss.
        additional_dependencies: [ 'types-requests', 'types-setuptools' ]  # Example: Add your project's type stubs.

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0  # Use a specific version
    hooks:
      - id: isort
        # VS Code: Install the "Python" extension (by Microsoft).  It includes
        #          isort integration. Configure isort settings in your VS Code
        #          settings.json
        # pre-commit: This is a final check, ensuring consistent import order

  - repo: local  # 'local' hooks run scripts within your repository.
    hooks:
      - id: autoinit
        name: Auto-generate __init__.py
        entry: autoinit  # Assumes you have 'autoinit' installed (pip install autoinit)
        language: python
        files: 'src/source_project2/'  #  **CRITICAL:**  Change this to your source directory!
        args:
          - --dest-dir=src  #  **IMPORTANT:** Specify the destination directory.
          - --single-pass  #  Only update existing __init__.py files, don't create new ones.  Good for initial setup.
          # - --create      #  Create __init__.py files if they don't exist (use with caution!).
        # VS Code: No direct integration, but autoinit keeps __init__.py files up-to-date.

      - id: pytest
        name: Run Tests with pytest
        entry: pytest
        language: python
        pass_filenames: false  # Don't pass individual filenames to pytest.
        always_run: true      # Run tests even if no Python files have changed.
        # VS Code: Install the "Python" extension.  It has excellent pytest integration
        #          (test discovery, running, debugging).
        args: [-v, -x, --cov=src, --cov-report=xml]
            # -v: Verbose output.
            # -x: Stop on first failure.
            # --cov=src: Measure code coverage for the 'src' directory.
            # --cov-report=xml: Generate a coverage report in XML format (for VS Code extensions).